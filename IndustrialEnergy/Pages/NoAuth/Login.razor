@page "/Login"
@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager

<div class="col-md-6 offset-md-3 mt-5">
    @if (NavigationManager.BaseUri.Contains("localhost"))
    {
        <div class="alert alert-info">
            Develop Info <br />
            Username: admin
            <br />
            Password: admin
        </div>
    }
    <div class="card">
        <h4 class="card-header">Login</h4>
        <div class="card-body">
            <EditForm Model="@model" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label>Username</label>
                    <InputText @bind-Value="model.Username" class="form-control" />
                    <ValidationMessage For="@(() => model.Username)" />
                </div>
                <div class="form-group">
                    <label>Password</label>
                    <InputText @bind-Value="model.Password" type="password" class="form-control" />
                    <ValidationMessage For="@(() => model.Password)" />
                </div>
                <button class="btn btn-primary">
                    Login
                </button>

                <p @onclick="@(() => GoToSignUp())"> If you don't have an account, click here</p>

                @if (!string.IsNullOrEmpty(error))
                {
                    <div class="alert alert-danger mt-3 mb-0">@error</div>
                }
            </EditForm>
        </div>
    </div>
</div>
@*<button class="btn btn-info" @onclick="@(() => toastService.ShowToast("Info","I'm an INFO message", ToastLevel.Info))">Info Toast</button>
    <button class="btn btn-success" @onclick="@(() => toastService.ShowToast("Succes","I'm a SUCCESS message", ToastLevel.Success))">Success Toast</button>
    <button class="btn btn-warning" @onclick="@(() => toastService.ShowToast("Warning","I'm a WARNING message", ToastLevel.Warning))">Warning Toast</button>
    <button class="btn btn-danger" @onclick="@(() => toastService.ShowToast("Error","I'm an ERROR message", ToastLevel.Error))">Error Toast</button>*@


@code{
    private LoginUser model = new LoginUser();
    private string error;

    protected override void OnInitialized()
    {
        if (AuthenticationService.User != null)
        {
            NavigationManager.NavigateTo("");
        }
    }

    private async void HandleValidSubmit()
    {
        try
        {
            IRestResponse response = await AuthenticationService.Login(model);
            ResponseContent responseContent = JsonConvert.DeserializeObject<ResponseContent>(response.Content);

            if (response.StatusCode != System.Net.HttpStatusCode.OK)
            {

                error = responseContent.Message;
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            error = "";
            StateHasChanged();
        }
    }

    private void GoToSignUp()
    {
        NavigationManager.NavigateTo("/SignUp");
    }


}