@page "/Login"
@using System.ComponentModel.DataAnnotations
@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager

<div class="col-md-6 offset-md-3 mt-5">
    @if (NavigationManager.BaseUri.Contains("localhost")) {
    <div class="alert alert-info">
        Username: admin
        <br />
        Password: admin
    </div>
    }
    <div class="card">
        <h4 class="card-header">Login</h4>
        <div class="card-body">
            <EditForm Model="@model" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label>Username</label>
                    <InputText @bind-Value="model.Username" class="form-control" />
                    <ValidationMessage For="@(() => model.Username)" />
                </div>
                <div class="form-group">
                    <label>Password</label>
                    <InputText @bind-Value="model.Password" type="password" class="form-control" />
                    <ValidationMessage For="@(() => model.Password)" />
                </div>
                <button class="btn btn-primary">
                    @if (loading)
                    {
                        <span class="spinner-border spinner-border-sm mr-1"></span>
                    }
                    Login
                </button>
                @if (!string.IsNullOrEmpty(error))
                {
                    <div class="alert alert-danger mt-3 mb-0">@error</div>
                }
            </EditForm>
        </div>
    </div>
</div>

@code{
    private Model model = new Model();
    private bool loading;
    private string error;

    private class Model
    {
        [Required]
        public string Username { get; set; }

        [Required]
        public string Password { get; set; }
    }

    protected override void OnInitialized()
    {
        // redirect to home if already logged in
        if (AuthenticationService.IsValidToken())
        {
            NavigationManager.NavigateTo("");
        }
    }

    private async void HandleValidSubmit()
    {
        loading = true;
        try
        {
            IRestResponse response = await AuthenticationService.Login(model.Username, model.Password);
            if (response.StatusCode == System.Net.HttpStatusCode.OK)
            {
                NavigationManager.NavigateTo("");
            }
            else
            {
                //ERRORE ALLERT?
            }
        }
        catch (Exception ex)
        {
            error = ex.Message;
            loading = false;
            StateHasChanged();
        }
    }


    //public async void PostMethod()
    //{
    //    Message = "";
    //    string token = await localStore.GetItemAsync<string>("jwt");
    //    Dictionary<string, string> header = new Dictionary<string, string>();
    //    header.Add("Authorization", token);
    //    var value = Guid.NewGuid().ToString();

    //    var response = Service.ResponseJsonAuth("http://localhost:61171/api/login", value, header, RestSharp.Method.POST);

    //    if (response.StatusCode == System.Net.HttpStatusCode.OK)
    //    {
    //        Message = "Post Success:" + response.StatusCode.ToString();
    //    }
    //    else
    //    {
    //        Message = "Post Error:" + response.StatusCode.ToString();

    //    }
    //}
}