@inject NavigationManager NavigationManager
@inject IAuthenticationService Authentication

<Router AppAssembly="@typeof(Program).Assembly" OnNavigateAsync="@OnNavigateAsync">
    <Navigating>
        @*<div class="spinner-container">
            <div class="spinner-center">
                <SpinKitCircle />
            </div>
        </div>*@
    </Navigating>
    <Found Context="routeData">
        <AppRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
    </Found>
    <NotFound>
        @{
            // redirect to home page if not found
            NavigationManager.NavigateTo("");
        }
    </NotFound>
</Router>

@code {
    private List<string> NotAutorizePages = new List<string>() { "login", "signUp", "forgotPassword", "logout" };
    private async Task OnNavigateAsync(NavigationContext args)
    {
        bool conteinsKey = await System.LocalStore.ContainKeyAsync("jwt");
        if (string.IsNullOrEmpty(System.Token) && conteinsKey)
        {
            await System.Init();
        }

        if (!NotAutorizePages.Contains(args.Path))
            await Authentication.CheckIfTokenIsValid();

    }
}